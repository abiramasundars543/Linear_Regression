import pandas as pd
import numpy as np
from sklearn import linear_model
import matplotlib.pyplot as plt


df = pd.read_csv('Downloads/canada_per_capita_income.csv') # read dataset from csv file
df.head()

df.columns=['year', 'income'] ## name the columns

%matplotlib inline
plt.xlabel('year')
plt.ylabel('per capita income(US$)')
plt.scatter(x,y,color='red',marker='*')  ## plot the x vs y points as per the dataset

reg= linear_model.LinearRegression() ## y=mx+b
reg.fit(df[['year']],df[['income']]) # x= year, y= income

new_df=df.drop('per capita income (US$)',axis='columns')
new_df.head()

y_pred= reg.predict(new_df[['year']]) ## predict the model if you have new dataset value put the required values

reg.coef_ # m value

reg.intercept_ # b value

828.46507522*2020+-1632210.75785546  ## manual calculation

%matplotlib inline
plt.xlabel('Year')
plt.ylabel('per capita Income(US$)')
plt.scatter(df.year, df.income, color='red', marker='*')
plt.plot(df.year, y_pred, color='blue')   ## plot the linear regression line 

reg.predict([[2020]])   ## predict the required value

p= reg.predict(new_df)               ## predict new dataset
p

new_df['income']=p
new_df                        ## insert the predicted value into the new dataset 

new_df.to_csv("Downloads/canada_per_capita_income_pred.csv")   ## export the new dataset into the csv file

new_df.head()  ## our updated new dataset
